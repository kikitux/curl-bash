# -*- mode: ruby -*-
# vi: set ft=ruby :
#

info = <<-'EOF'

Vault root token is changeme

Then you can reach the services at

consul http://localhost:8500
nomad http://localhost:4646
vault http://localhost:8200

EOF


# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  # global
  config.vm.box = "bento/ubuntu-18.04"				# this box have 2nd nic on eth1, we will set IFACE=eth1
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "512"
  end

  # consul
  config.vm.define "consul" do |consul|
    consul.vm.hostname = "consul"
    consul.vm.network "private_network", ip: "192.168.56.20"	# all the consul clients will join 192.168.56.20
    consul.vm.network "forwarded_port", guest: 8500, host: 8500 # consul http ui port

    consul.vm.provision "shell", env: { "IFACE" => "eth1" },
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/consul-1server/consul.sh"

  end

  # vault
  config.vm.define "vault" do |vault|
    vault.vm.hostname = "vault"
    vault.vm.network "private_network", ip: "192.168.56.21"
    vault.vm.network "forwarded_port", guest: 8200, host: 8200 # vault http ui port

    vault.vm.provision "shell", env: { "IFACE" => "eth1", "LAN_JOIN" => "192.168.56.20" },
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/consul-client/consul.sh"

    vault.vm.provision "shell",
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/vault-dev/vault.sh"

  end

  # nomad
  config.vm.define "nomad" do |nomad|
    nomad.vm.hostname = "nomad"
    nomad.vm.network "private_network", ip: "192.168.56.22"    # nomad client will join 192.168.56.22
    nomad.vm.network "forwarded_port", guest: 4646, host: 4646 # nomad http ui port

    nomad.vm.provision "shell", env: { "IFACE" => "eth1", "LAN_JOIN" => "192.168.56.20" },
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/consul-client/consul.sh"

    nomad.vm.provision "shell", env: { "IFACE" => "eth1" },
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/nomad-1server/nomad.sh"

  end

  # client
  config.vm.define "client" do |client|
    client.vm.hostname = "client"
    client.vm.network "private_network", ip: "192.168.56.23"

    client.vm.provision "shell",
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/provision/docker.sh"

    client.vm.provision "shell",
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/provision/java-jre.sh"

    client.vm.provision "shell", env: { "IFACE" => "eth1", "LAN_JOIN" => "192.168.56.20" },
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/consul-client/consul.sh"

    client.vm.provision "shell", env: { "IFACE" => "eth1", "LAN_JOIN" => "192.168.56.22" },
      path: "https://raw.githubusercontent.com/kikitux/curl-bash/master/nomad-client/nomad.sh"

  end


  puts info if ARGV[0] == "status"

end
